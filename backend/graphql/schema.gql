# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  id: String!
  userName: String!
}

type PostDto {
  id: String!
  title: String!
  content: String!
  authorId: String!
  author: Author!
  updatedAt: Timestamp!
  createdAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type UserDto {
  userId: String!
  userName: String!
  role: String!
  createAt: Timestamp!
}

type Query {
  getUserById(id: String!): UserDto!
  getPostById(
    """post id로 post 정보를 가져온다"""
    id: String!
  ): PostDto!
  posts(pagination: Pagenation!, order: PostsOrder): [PostDto!]!
}

input Pagenation {
  skip: Float!
  take: Float!
}

input PostsOrder {
  orderBy: PostOrderByUpdatedAtInput!
}

input PostOrderByUpdatedAtInput {
  createdAt: SortOrder!
}

enum SortOrder {
  asc
  desc
}

type Mutation {
  createUser(
    """유저 생성"""
    user: CreateUserInput!
  ): UserDto!
  updateUser(
    """유저 업데이트"""
    user: UpdateUserInput!
  ): UserDto!
  createPost(
    """CreatePost 데이터"""
    post: CreatePostInput!
  ): PostDto!
  updatePost(
    """UpdatePost 데이터"""
    post: UpdatePostInput!
  ): PostDto!
  deletePost(
    """DeletePost 데이터"""
    post: DeletePostInput!
  ): PostDto!
}

input CreateUserInput {
  userName: String!
  userEmail: String!
  password: String!
  role: Role!
}

enum Role {
  USER
  ADMIN
}

input UpdateUserInput {
  userId: String!
  userEmail: String!
  userName: String!
  password: String!
  role: Role!
}

input CreatePostInput {
  title: String!
  content: String
  authorId: String!
}

input UpdatePostInput {
  id: String!
  title: String!
  content: String
}

input DeletePostInput {
  id: String!
}